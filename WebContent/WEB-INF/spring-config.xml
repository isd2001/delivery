<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-2.0.xsd">

	 <context:component-scan base-package="app"/>

	<bean id="handlerMapping"
	 	class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	 <!-- controller registration -->
<!-- 	  
	<websocket:handlers>
		<websocket:mapping handler="findSocketController" path="/find.do" />
	
		<websocket:handshake-interceptors>
			<bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers> -->
	 
	 <!-- viewResolver configuration -->
	<bean id="gson" class="com.google.gson.Gson"/>
	
	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions" value="/WEB-INF/tiles/*.xml"></property>
	</bean>
	<bean id="newResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="suffix" value =".jsp"/>
		<property name="prefix" value="/WEB-INF/views/"/>
	</bean>
	 <bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
	 	<property name="url" value="jdbc:oracle:thin:@kkh.mockingu.com:1521:xe"></property>
	 	<property name="username" value="dev"></property>
	 	<property name="password" value="oracle"></property>
	 </bean>
	 
	
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds"></property>	 
		<property name="mapperLocations" value="/WEB-INF/mappers/*.xml"></property>
	 </bean>
	 
	 <bean id="sqlTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	 	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	 </bean>
	 <context:component-scan base-package="app.models"></context:component-scan>
	 
	 <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id = "multipartResolver"/>
	
	<!-- WebSocketHandler 등록 및 매핑 
	
		1. namespaces에서 websocket 체크
		2. mapping/
		 handler 부분에는 WebSocketHandler를 extends 걸고 설계한
		 웹소켓 컨트롤러 객체의 id를 설정하면 됨(ref 처리됨)
		   - 웹소켓 처리용 객체는 bean을 수동으로 등록해서 이름을 줘도 되고,
		   - component-scan 에 의해서 자동 등록되는 객체들은 , 앞에만 소문자로 바껴서 등록이 되기 때문에
	-->
	<!-- <bean id="zulu" class="controllers.study.ZuluController"/> -->
	
<!-- 	<websocket:handlers>
		<websocket:mapping handler="accesslistController" path="/access.do"/>
		<websocket:mapping handler="chatSocketController" path="/onechat.do"/>		
		
		<websocket:handshake-interceptors>
			<bean class = "org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></bean>
		</websocket:handshake-interceptors>
		
	</websocket:handlers>  -->
	
	<mongo:mongo-client host="kkh.mockingu.com" port="15635"/>
	 <bean id = "mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
	 	<constructor-arg name = "mongoClient" ref="mongoClient"/>
	 	<constructor-arg name = "databaseName" value = "dev"/>
	 </bean>
</beans>
